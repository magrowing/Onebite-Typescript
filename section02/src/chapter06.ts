// any 
// 특정 변수의 타입을 우리가 확실히 모를 때 
// 모든 타입이 될 수 있다. 
// 🚨 any 타입은 모든 타입이 될 수 있어서 타입 검사를 쉽게 통과하게 한다. 
// any타입은 런타임시 에러를 발생시킬 가능성이 있다. 타입 검사를 어찌되든 다 통과하는 치트키 같은 타입이기에 사실상 
// Type 검사를 안하는것과 똑같은 결과를 불러올 수 있어, 타입스크립트의 이점을 포기하느것과 마찬가지! 
// 최대한 사용하지 않는 편이 좋다!! 
let anyVar : any = 10; 

anyVar = true; 
anyVar = {}; 
anyVar = () => {}

anyVar.toUpperCase();  // 🚨 런타임시 에러 


// unknown
// 모든 타입의 값을 할당 할 수 있다. 
// 차이점 : unknown 타입은 any타입외의 어떤 타입에도 할당 할 수 없다. 
// 프로퍼티 접근하기, 메소드 호출하기, 인스턴스 생성하기를 할 수 없다. 

// let varr : unknown; 
// let booleanType : boolean = varr  👈🏻 error! boolean 타입에는 unknown 타입을 할당할 수 없다. 


//unknown 타입을 사용하는 이유는 
// 타입스크립트를 사용하다 보면 인자의 타입을 예측할 수 없는 경우가 있다. any 휴먼에러를 부르기 쉽지만, 
// unknown 타입은 항상 타입을 먼저 확인한 후에(메소드호출, 인스턴스생성, 프로퍼티접근하기 위해서는 타입좁히기)무언가를 시도할 수 있기 때문에 any 타입보다 더욱 안전하다. 